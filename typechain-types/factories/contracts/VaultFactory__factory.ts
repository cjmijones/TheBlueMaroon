/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VaultFactory,
  VaultFactoryInterface,
} from "../../contracts/VaultFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_impl",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "VaultCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nft",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "predictVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161099f38038061099f833981810160405281019061003291906100cf565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506100fc565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061009c82610071565b9050919050565b6100ac81610091565b81146100b757600080fd5b50565b6000815190506100c9816100a3565b92915050565b6000602082840312156100e5576100e461006c565b5b60006100f3848285016100ba565b91505092915050565b60805161087b6101246000396000818160f90152818161012a0152610181015261087b6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354bcc021146100465780635c60da1b14610076578063aef7f20e14610094575b600080fd5b610060600480360381019061005b91906104cf565b6100c4565b60405161006d9190610531565b60405180910390f35b61007e610128565b60405161008b9190610531565b60405180910390f35b6100ae60048036038101906100a991906105b1565b61014c565b6040516100bb9190610531565b60405180910390f35b6000808484846040516020016100dc939291906106d6565b60405160208183030381529060405280519060200120905061011e7f000000000000000000000000000000000000000000000000000000000000000082610295565b9150509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080888833604051602001610164939291906106d6565b6040516020818303038152906040528051906020012090506101a67f0000000000000000000000000000000000000000000000000000000000000000826102aa565b91508173ffffffffffffffffffffffffffffffffffffffff1663e001ff52338b8b8b8b8b8b8b6040518963ffffffff1660e01b81526004016101ef989796959493929190610780565b600060405180830381600087803b15801561020957600080fd5b505af115801561021d573d6000803e3d6000fd5b50505050878973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f5d4148e45f0546a8062f1ee632d2c40d70799edcca9aac21129328809dffa52c8a336040516102819291906107f3565b60405180910390a450979650505050505050565b60006102a28383306102c0565b905092915050565b60006102b883836000610337565b905092915050565b60006040518260388201526f5af43d82803e903d91602b57fd5bf3ff6024820152846014820152733d602d80600a3d3981f3363d3d373d3d3d363d7381528360588201526037600c820120607882015273ffffffffffffffffffffffffffffffffffffffff60556043830120169150509392505050565b6000814710156103805747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161037792919061081c565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c176000526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361042a576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104668261043b565b9050919050565b6104768161045b565b811461048157600080fd5b50565b6000813590506104938161046d565b92915050565b6000819050919050565b6104ac81610499565b81146104b757600080fd5b50565b6000813590506104c9816104a3565b92915050565b6000806000606084860312156104e8576104e7610431565b5b60006104f686828701610484565b9350506020610507868287016104ba565b925050604061051886828701610484565b9150509250925092565b61052b8161045b565b82525050565b60006020820190506105466000830184610522565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126105715761057061054c565b5b8235905067ffffffffffffffff81111561058e5761058d610551565b5b6020830191508360018202830111156105aa576105a9610556565b5b9250929050565b600080600080600080600060a0888a0312156105d0576105cf610431565b5b60006105de8a828b01610484565b97505060206105ef8a828b016104ba565b96505060406106008a828b016104ba565b955050606088013567ffffffffffffffff81111561062157610620610436565b5b61062d8a828b0161055b565b9450945050608088013567ffffffffffffffff8111156106505761064f610436565b5b61065c8a828b0161055b565b925092505092959891949750929550565b60008160601b9050919050565b60006106858261066d565b9050919050565b60006106978261067a565b9050919050565b6106af6106aa8261045b565b61068c565b82525050565b6000819050919050565b6106d06106cb82610499565b6106b5565b82525050565b60006106e2828661069e565b6014820191506106f282856106bf565b602082019150610702828461069e565b601482019150819050949350505050565b61071c81610499565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b600061075f8385610722565b935061076c838584610733565b61077583610742565b840190509392505050565b600060c082019050610795600083018b610522565b6107a2602083018a610522565b6107af6040830189610713565b6107bc6060830188610713565b81810360808301526107cf818688610753565b905081810360a08301526107e4818486610753565b90509998505050505050505050565b60006040820190506108086000830185610713565b6108156020830184610522565b9392505050565b60006040820190506108316000830185610713565b61083e6020830184610713565b939250505056fea2646970667358221220d1702cd2a94c606b0e17359aa140d1154bc4262c88d09b3fe71afea6e4eeed4464736f6c634300081c0033";

type VaultFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultFactory__factory extends ContractFactory {
  constructor(...args: VaultFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _impl: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_impl, overrides || {});
  }
  override deploy(
    _impl: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_impl, overrides || {}) as Promise<
      VaultFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VaultFactory__factory {
    return super.connect(runner) as VaultFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultFactoryInterface {
    return new Interface(_abi) as VaultFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VaultFactory {
    return new Contract(address, _abi, runner) as unknown as VaultFactory;
  }
}
